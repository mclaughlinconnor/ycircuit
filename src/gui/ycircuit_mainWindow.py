# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\src\gui\ycircuit_mainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.6
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1089, 790)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../../Resources/icon.jpg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.drawingArea = DrawingArea(self.centralwidget)
        self.drawingArea.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.drawingArea.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.drawingArea.setRenderHints(QtGui.QPainter.Antialiasing|QtGui.QPainter.SmoothPixmapTransform|QtGui.QPainter.TextAntialiasing)
        self.drawingArea.setDragMode(QtWidgets.QGraphicsView.RubberBandDrag)
        self.drawingArea.setCacheMode(QtWidgets.QGraphicsView.CacheBackground)
        self.drawingArea.setTransformationAnchor(QtWidgets.QGraphicsView.NoAnchor)
        self.drawingArea.setResizeAnchor(QtWidgets.QGraphicsView.AnchorUnderMouse)
        self.drawingArea.setViewportUpdateMode(QtWidgets.QGraphicsView.MinimalViewportUpdate)
        self.drawingArea.setRubberBandSelectionMode(QtCore.Qt.ContainsItemShape)
        self.drawingArea.setObjectName("drawingArea")
        self.horizontalLayout.addWidget(self.drawingArea)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1089, 21))
        self.menubar.setObjectName("menubar")
        self.menu_File = QtWidgets.QMenu(self.menubar)
        self.menu_File.setObjectName("menu_File")
        self.menu_Edit = QtWidgets.QMenu(self.menubar)
        self.menu_Edit.setObjectName("menu_Edit")
        self.menu_setPenWidth = QtWidgets.QMenu(self.menu_Edit)
        self.menu_setPenWidth.setObjectName("menu_setPenWidth")
        self.menu_setPenColour = QtWidgets.QMenu(self.menu_Edit)
        self.menu_setPenColour.setObjectName("menu_setPenColour")
        self.menu_setPenStyle = QtWidgets.QMenu(self.menu_Edit)
        self.menu_setPenStyle.setObjectName("menu_setPenStyle")
        self.menu_setFillColour = QtWidgets.QMenu(self.menu_Edit)
        self.menu_setFillColour.setObjectName("menu_setFillColour")
        self.menu_setFillStyle = QtWidgets.QMenu(self.menu_Edit)
        self.menu_setFillStyle.setObjectName("menu_setFillStyle")
        self.menuHeight = QtWidgets.QMenu(self.menu_Edit)
        self.menuHeight.setObjectName("menuHeight")
        self.menu_AddSymbol = QtWidgets.QMenu(self.menubar)
        self.menu_AddSymbol.setObjectName("menu_AddSymbol")
        self.menu_Transistor = QtWidgets.QMenu(self.menu_AddSymbol)
        self.menu_Transistor.setObjectName("menu_Transistor")
        self.menu_N_type_MOSFET = QtWidgets.QMenu(self.menu_Transistor)
        self.menu_N_type_MOSFET.setObjectName("menu_N_type_MOSFET")
        self.menu_P_type_MOSFET = QtWidgets.QMenu(self.menu_Transistor)
        self.menu_P_type_MOSFET.setObjectName("menu_P_type_MOSFET")
        self.menuSources = QtWidgets.QMenu(self.menu_AddSymbol)
        self.menuSources.setObjectName("menuSources")
        self.menu_DC = QtWidgets.QMenu(self.menuSources)
        self.menu_DC.setObjectName("menu_DC")
        self.menu_Controlled = QtWidgets.QMenu(self.menuSources)
        self.menu_Controlled.setObjectName("menu_Controlled")
        self.menu_View = QtWidgets.QMenu(self.menubar)
        self.menu_View.setObjectName("menu_View")
        self.menuMajor_grid_point_spacing = QtWidgets.QMenu(self.menu_View)
        self.menuMajor_grid_point_spacing.setObjectName("menuMajor_grid_point_spacing")
        self.menuMinor_grid_point_spacing = QtWidgets.QMenu(self.menu_View)
        self.menuMinor_grid_point_spacing.setObjectName("menuMinor_grid_point_spacing")
        self.menuSnap_to_grid_spacing = QtWidgets.QMenu(self.menu_View)
        self.menuSnap_to_grid_spacing.setObjectName("menuSnap_to_grid_spacing")
        self.menuSh_ape = QtWidgets.QMenu(self.menubar)
        self.menuSh_ape.setObjectName("menuSh_ape")
        self.menu_Arc = QtWidgets.QMenu(self.menuSh_ape)
        self.menu_Arc.setObjectName("menu_Arc")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.statusbar.setSizeGripEnabled(True)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setMovable(False)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.action_exportFile = QtWidgets.QAction(MainWindow)
        self.action_exportFile.setObjectName("action_exportFile")
        self.action_quit = QtWidgets.QAction(MainWindow)
        self.action_quit.setObjectName("action_quit")
        self.action_move = QtWidgets.QAction(MainWindow)
        self.action_move.setCheckable(True)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icons/view-fullscreen.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_move.setIcon(icon1)
        self.action_move.setIconVisibleInMenu(False)
        self.action_move.setObjectName("action_move")
        self.action_copy = QtWidgets.QAction(MainWindow)
        self.action_copy.setCheckable(True)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icons/edit-copy.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_copy.setIcon(icon2)
        self.action_copy.setIconVisibleInMenu(False)
        self.action_copy.setObjectName("action_copy")
        self.action_addWire = QtWidgets.QAction(MainWindow)
        self.action_addWire.setObjectName("action_addWire")
        self.action_addResistor = QtWidgets.QAction(MainWindow)
        self.action_addResistor.setObjectName("action_addResistor")
        self.action_addDot = QtWidgets.QAction(MainWindow)
        self.action_addDot.setObjectName("action_addDot")
        self.action_setWidth2 = QtWidgets.QAction(MainWindow)
        self.action_setWidth2.setCheckable(True)
        self.action_setWidth2.setChecked(False)
        self.action_setWidth2.setObjectName("action_setWidth2")
        self.action_setWidth4 = QtWidgets.QAction(MainWindow)
        self.action_setWidth4.setCheckable(True)
        self.action_setWidth4.setChecked(False)
        self.action_setWidth4.setObjectName("action_setWidth4")
        self.action_setWidth6 = QtWidgets.QAction(MainWindow)
        self.action_setWidth6.setCheckable(True)
        self.action_setWidth6.setObjectName("action_setWidth6")
        self.action_setWidth8 = QtWidgets.QAction(MainWindow)
        self.action_setWidth8.setCheckable(True)
        self.action_setWidth8.setObjectName("action_setWidth8")
        self.action_setWidth10 = QtWidgets.QAction(MainWindow)
        self.action_setWidth10.setCheckable(True)
        self.action_setWidth10.setObjectName("action_setWidth10")
        self.action_rotate = QtWidgets.QAction(MainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icons/object-rotate-right.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_rotate.setIcon(icon3)
        self.action_rotate.setIconVisibleInMenu(False)
        self.action_rotate.setObjectName("action_rotate")
        self.action_mirror = QtWidgets.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/icons/object-flip-horizontal.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_mirror.setIcon(icon4)
        self.action_mirror.setIconVisibleInMenu(False)
        self.action_mirror.setObjectName("action_mirror")
        self.action_fitToView = QtWidgets.QAction(MainWindow)
        self.action_fitToView.setObjectName("action_fitToView")
        self.action_showGrid = QtWidgets.QAction(MainWindow)
        self.action_showGrid.setCheckable(True)
        self.action_showGrid.setChecked(True)
        self.action_showGrid.setObjectName("action_showGrid")
        self.action_delete = QtWidgets.QAction(MainWindow)
        self.action_delete.setCheckable(False)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/icons/list-remove.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_delete.setIcon(icon5)
        self.action_delete.setIconVisibleInMenu(False)
        self.action_delete.setObjectName("action_delete")
        self.action_setPenColourRed = QtWidgets.QAction(MainWindow)
        self.action_setPenColourRed.setCheckable(True)
        self.action_setPenColourRed.setObjectName("action_setPenColourRed")
        self.action_setPenColourBlue = QtWidgets.QAction(MainWindow)
        self.action_setPenColourBlue.setCheckable(True)
        self.action_setPenColourBlue.setObjectName("action_setPenColourBlue")
        self.action_setPenColourGreen = QtWidgets.QAction(MainWindow)
        self.action_setPenColourGreen.setCheckable(True)
        self.action_setPenColourGreen.setObjectName("action_setPenColourGreen")
        self.action_setPenColourBlack = QtWidgets.QAction(MainWindow)
        self.action_setPenColourBlack.setCheckable(True)
        self.action_setPenColourBlack.setChecked(False)
        self.action_setPenColourBlack.setObjectName("action_setPenColourBlack")
        self.action_setPenStyleSolid = QtWidgets.QAction(MainWindow)
        self.action_setPenStyleSolid.setCheckable(True)
        self.action_setPenStyleSolid.setChecked(False)
        self.action_setPenStyleSolid.setObjectName("action_setPenStyleSolid")
        self.action_setPenStyleDash = QtWidgets.QAction(MainWindow)
        self.action_setPenStyleDash.setCheckable(True)
        self.action_setPenStyleDash.setObjectName("action_setPenStyleDash")
        self.action_setPenStyleDot = QtWidgets.QAction(MainWindow)
        self.action_setPenStyleDot.setCheckable(True)
        self.action_setPenStyleDot.setObjectName("action_setPenStyleDot")
        self.action_setPenStyleDashDot = QtWidgets.QAction(MainWindow)
        self.action_setPenStyleDashDot.setCheckable(True)
        self.action_setPenStyleDashDot.setObjectName("action_setPenStyleDashDot")
        self.action_setPenStyleDashDotDot = QtWidgets.QAction(MainWindow)
        self.action_setPenStyleDashDotDot.setCheckable(True)
        self.action_setPenStyleDashDotDot.setObjectName("action_setPenStyleDashDotDot")
        self.action_addCapacitor = QtWidgets.QAction(MainWindow)
        self.action_addCapacitor.setObjectName("action_addCapacitor")
        self.action_addGround = QtWidgets.QAction(MainWindow)
        self.action_addGround.setObjectName("action_addGround")
        self.action_setBrushColourBlack = QtWidgets.QAction(MainWindow)
        self.action_setBrushColourBlack.setCheckable(True)
        self.action_setBrushColourBlack.setChecked(False)
        self.action_setBrushColourBlack.setObjectName("action_setBrushColourBlack")
        self.action_setBrushColourRed = QtWidgets.QAction(MainWindow)
        self.action_setBrushColourRed.setCheckable(True)
        self.action_setBrushColourRed.setObjectName("action_setBrushColourRed")
        self.action_setBrushColourBlue = QtWidgets.QAction(MainWindow)
        self.action_setBrushColourBlue.setCheckable(True)
        self.action_setBrushColourBlue.setObjectName("action_setBrushColourBlue")
        self.action_setBrushColourGreen = QtWidgets.QAction(MainWindow)
        self.action_setBrushColourGreen.setCheckable(True)
        self.action_setBrushColourGreen.setObjectName("action_setBrushColourGreen")
        self.action_setBrushStyleNone = QtWidgets.QAction(MainWindow)
        self.action_setBrushStyleNone.setCheckable(True)
        self.action_setBrushStyleNone.setChecked(False)
        self.action_setBrushStyleNone.setObjectName("action_setBrushStyleNone")
        self.action_setBrushStyleSolid = QtWidgets.QAction(MainWindow)
        self.action_setBrushStyleSolid.setCheckable(True)
        self.action_setBrushStyleSolid.setObjectName("action_setBrushStyleSolid")
        self.action_addNPNBJT = QtWidgets.QAction(MainWindow)
        self.action_addNPNBJT.setObjectName("action_addNPNBJT")
        self.action_addPNPBJT = QtWidgets.QAction(MainWindow)
        self.action_addPNPBJT.setObjectName("action_addPNPBJT")
        self.action_addNMOSWithArrow = QtWidgets.QAction(MainWindow)
        self.action_addNMOSWithArrow.setObjectName("action_addNMOSWithArrow")
        self.action_addNMOSWithoutArrow = QtWidgets.QAction(MainWindow)
        self.action_addNMOSWithoutArrow.setObjectName("action_addNMOSWithoutArrow")
        self.action_addPMOSWithArrow = QtWidgets.QAction(MainWindow)
        self.action_addPMOSWithArrow.setObjectName("action_addPMOSWithArrow")
        self.action_addPMOSWithoutArrow = QtWidgets.QAction(MainWindow)
        self.action_addPMOSWithoutArrow.setObjectName("action_addPMOSWithoutArrow")
        self.action_saveSymbol = QtWidgets.QAction(MainWindow)
        self.action_saveSymbol.setObjectName("action_saveSymbol")
        self.action_loadSymbol = QtWidgets.QAction(MainWindow)
        self.action_loadSymbol.setObjectName("action_loadSymbol")
        self.action_saveSchematic = QtWidgets.QAction(MainWindow)
        self.action_saveSchematic.setObjectName("action_saveSchematic")
        self.action_loadSchematic = QtWidgets.QAction(MainWindow)
        self.action_loadSchematic.setObjectName("action_loadSchematic")
        self.action_addLine = QtWidgets.QAction(MainWindow)
        self.action_addLine.setObjectName("action_addLine")
        self.action_addRectangle = QtWidgets.QAction(MainWindow)
        self.action_addRectangle.setObjectName("action_addRectangle")
        self.action_addCircle = QtWidgets.QAction(MainWindow)
        self.action_addCircle.setObjectName("action_addCircle")
        self.action_addEllipse = QtWidgets.QAction(MainWindow)
        self.action_addEllipse.setObjectName("action_addEllipse")
        self.action_snapToGrid = QtWidgets.QAction(MainWindow)
        self.action_snapToGrid.setCheckable(True)
        self.action_snapToGrid.setChecked(True)
        self.action_snapToGrid.setObjectName("action_snapToGrid")
        self.action_addTextBox = QtWidgets.QAction(MainWindow)
        self.action_addTextBox.setObjectName("action_addTextBox")
        self.action_setPenColourCyan = QtWidgets.QAction(MainWindow)
        self.action_setPenColourCyan.setCheckable(True)
        self.action_setPenColourCyan.setObjectName("action_setPenColourCyan")
        self.action_setPenColourMagenta = QtWidgets.QAction(MainWindow)
        self.action_setPenColourMagenta.setCheckable(True)
        self.action_setPenColourMagenta.setObjectName("action_setPenColourMagenta")
        self.action_setPenColourYellow = QtWidgets.QAction(MainWindow)
        self.action_setPenColourYellow.setCheckable(True)
        self.action_setPenColourYellow.setObjectName("action_setPenColourYellow")
        self.action_setBrushColourCyan = QtWidgets.QAction(MainWindow)
        self.action_setBrushColourCyan.setCheckable(True)
        self.action_setBrushColourCyan.setObjectName("action_setBrushColourCyan")
        self.action_setBrushColourMagenta = QtWidgets.QAction(MainWindow)
        self.action_setBrushColourMagenta.setCheckable(True)
        self.action_setBrushColourMagenta.setObjectName("action_setBrushColourMagenta")
        self.action_setBrushColourYellow = QtWidgets.QAction(MainWindow)
        self.action_setBrushColourYellow.setCheckable(True)
        self.action_setBrushColourYellow.setObjectName("action_setBrushColourYellow")
        self.action_addDCVoltageSource = QtWidgets.QAction(MainWindow)
        self.action_addDCVoltageSource.setObjectName("action_addDCVoltageSource")
        self.action_addDCCurrentSource = QtWidgets.QAction(MainWindow)
        self.action_addDCCurrentSource.setObjectName("action_addDCCurrentSource")
        self.action_addVCVS = QtWidgets.QAction(MainWindow)
        self.action_addVCVS.setObjectName("action_addVCVS")
        self.action_addVCCS = QtWidgets.QAction(MainWindow)
        self.action_addVCCS.setObjectName("action_addVCCS")
        self.action_addCCVS = QtWidgets.QAction(MainWindow)
        self.action_addCCVS.setObjectName("action_addCCVS")
        self.action_addCCCS = QtWidgets.QAction(MainWindow)
        self.action_addCCCS.setObjectName("action_addCCCS")
        self.action_addACSource = QtWidgets.QAction(MainWindow)
        self.action_addACSource.setObjectName("action_addACSource")
        self.action_addArc3Point = QtWidgets.QAction(MainWindow)
        self.action_addArc3Point.setObjectName("action_addArc3Point")
        self.action_addArc4Point = QtWidgets.QAction(MainWindow)
        self.action_addArc4Point.setObjectName("action_addArc4Point")
        self.action_undo = QtWidgets.QAction(MainWindow)
        self.action_undo.setEnabled(False)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/icons/edit-undo.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_undo.setIcon(icon6)
        self.action_undo.setIconVisibleInMenu(False)
        self.action_undo.setObjectName("action_undo")
        self.action_redo = QtWidgets.QAction(MainWindow)
        self.action_redo.setEnabled(False)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/icons/edit-redo.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_redo.setIcon(icon7)
        self.action_redo.setIconVisibleInMenu(False)
        self.action_redo.setObjectName("action_redo")
        self.action_saveSchematicAs = QtWidgets.QAction(MainWindow)
        self.action_saveSchematicAs.setObjectName("action_saveSchematicAs")
        self.action_saveSymbolAs = QtWidgets.QAction(MainWindow)
        self.action_saveSymbolAs.setObjectName("action_saveSymbolAs")
        self.action_modifySymbol = QtWidgets.QAction(MainWindow)
        self.action_modifySymbol.setObjectName("action_modifySymbol")
        self.action_editShape = QtWidgets.QAction(MainWindow)
        self.action_editShape.setObjectName("action_editShape")
        self.action_newSchematic = QtWidgets.QAction(MainWindow)
        self.action_newSchematic.setObjectName("action_newSchematic")
        self.action_options = QtWidgets.QAction(MainWindow)
        self.action_options.setObjectName("action_options")
        self.action_showMajorGridPoints = QtWidgets.QAction(MainWindow)
        self.action_showMajorGridPoints.setCheckable(True)
        self.action_showMajorGridPoints.setChecked(True)
        self.action_showMajorGridPoints.setObjectName("action_showMajorGridPoints")
        self.action_showMinorGridPoints = QtWidgets.QAction(MainWindow)
        self.action_showMinorGridPoints.setCheckable(True)
        self.action_showMinorGridPoints.setChecked(True)
        self.action_showMinorGridPoints.setObjectName("action_showMinorGridPoints")
        self.action_majorGridPointSpacing100 = QtWidgets.QAction(MainWindow)
        self.action_majorGridPointSpacing100.setCheckable(True)
        self.action_majorGridPointSpacing100.setChecked(True)
        self.action_majorGridPointSpacing100.setObjectName("action_majorGridPointSpacing100")
        self.action_majorGridPointSpacing200 = QtWidgets.QAction(MainWindow)
        self.action_majorGridPointSpacing200.setCheckable(True)
        self.action_majorGridPointSpacing200.setChecked(False)
        self.action_majorGridPointSpacing200.setObjectName("action_majorGridPointSpacing200")
        self.action_majorGridPointSpacing300 = QtWidgets.QAction(MainWindow)
        self.action_majorGridPointSpacing300.setCheckable(True)
        self.action_majorGridPointSpacing300.setObjectName("action_majorGridPointSpacing300")
        self.action_majorGridPointSpacing400 = QtWidgets.QAction(MainWindow)
        self.action_majorGridPointSpacing400.setCheckable(True)
        self.action_majorGridPointSpacing400.setObjectName("action_majorGridPointSpacing400")
        self.action_minorGridPointSpacing1 = QtWidgets.QAction(MainWindow)
        self.action_minorGridPointSpacing1.setCheckable(True)
        self.action_minorGridPointSpacing1.setObjectName("action_minorGridPointSpacing1")
        self.action_minorGridPointSpacing2 = QtWidgets.QAction(MainWindow)
        self.action_minorGridPointSpacing2.setCheckable(True)
        self.action_minorGridPointSpacing2.setObjectName("action_minorGridPointSpacing2")
        self.action_minorGridPointSpacing5 = QtWidgets.QAction(MainWindow)
        self.action_minorGridPointSpacing5.setCheckable(True)
        self.action_minorGridPointSpacing5.setObjectName("action_minorGridPointSpacing5")
        self.action_minorGridPointSpacing10 = QtWidgets.QAction(MainWindow)
        self.action_minorGridPointSpacing10.setCheckable(True)
        self.action_minorGridPointSpacing10.setObjectName("action_minorGridPointSpacing10")
        self.action_minorGridPointSpacing20 = QtWidgets.QAction(MainWindow)
        self.action_minorGridPointSpacing20.setCheckable(True)
        self.action_minorGridPointSpacing20.setChecked(True)
        self.action_minorGridPointSpacing20.setObjectName("action_minorGridPointSpacing20")
        self.action_minorGridPointSpacing30 = QtWidgets.QAction(MainWindow)
        self.action_minorGridPointSpacing30.setCheckable(True)
        self.action_minorGridPointSpacing30.setObjectName("action_minorGridPointSpacing30")
        self.action_minorGridPointSpacing40 = QtWidgets.QAction(MainWindow)
        self.action_minorGridPointSpacing40.setCheckable(True)
        self.action_minorGridPointSpacing40.setObjectName("action_minorGridPointSpacing40")
        self.action_snapToGridSpacing1 = QtWidgets.QAction(MainWindow)
        self.action_snapToGridSpacing1.setCheckable(True)
        self.action_snapToGridSpacing1.setObjectName("action_snapToGridSpacing1")
        self.action_snapToGridSpacing2 = QtWidgets.QAction(MainWindow)
        self.action_snapToGridSpacing2.setCheckable(True)
        self.action_snapToGridSpacing2.setObjectName("action_snapToGridSpacing2")
        self.action_snapToGridSpacing5 = QtWidgets.QAction(MainWindow)
        self.action_snapToGridSpacing5.setCheckable(True)
        self.action_snapToGridSpacing5.setObjectName("action_snapToGridSpacing5")
        self.action_snapToGridSpacing10 = QtWidgets.QAction(MainWindow)
        self.action_snapToGridSpacing10.setCheckable(True)
        self.action_snapToGridSpacing10.setObjectName("action_snapToGridSpacing10")
        self.action_snapToGridSpacing20 = QtWidgets.QAction(MainWindow)
        self.action_snapToGridSpacing20.setCheckable(True)
        self.action_snapToGridSpacing20.setObjectName("action_snapToGridSpacing20")
        self.action_snapToGridSpacing30 = QtWidgets.QAction(MainWindow)
        self.action_snapToGridSpacing30.setCheckable(True)
        self.action_snapToGridSpacing30.setObjectName("action_snapToGridSpacing30")
        self.action_snapToGridSpacing40 = QtWidgets.QAction(MainWindow)
        self.action_snapToGridSpacing40.setCheckable(True)
        self.action_snapToGridSpacing40.setObjectName("action_snapToGridSpacing40")
        self.action_setPenColourCustom = QtWidgets.QAction(MainWindow)
        self.action_setPenColourCustom.setObjectName("action_setPenColourCustom")
        self.action_setBrushColourCustom = QtWidgets.QAction(MainWindow)
        self.action_setBrushColourCustom.setObjectName("action_setBrushColourCustom")
        self.action_pickFont = QtWidgets.QAction(MainWindow)
        self.action_pickFont.setObjectName("action_pickFont")
        self.action_heightBringForward = QtWidgets.QAction(MainWindow)
        self.action_heightBringForward.setObjectName("action_heightBringForward")
        self.action_heightSendBack = QtWidgets.QAction(MainWindow)
        self.action_heightSendBack.setObjectName("action_heightSendBack")
        self.action_heightReset = QtWidgets.QAction(MainWindow)
        self.action_heightReset.setObjectName("action_heightReset")
        self.menu_File.addAction(self.action_newSchematic)
        self.menu_File.addSeparator()
        self.menu_File.addAction(self.action_saveSchematic)
        self.menu_File.addAction(self.action_saveSchematicAs)
        self.menu_File.addAction(self.action_saveSymbol)
        self.menu_File.addAction(self.action_saveSymbolAs)
        self.menu_File.addSeparator()
        self.menu_File.addAction(self.action_loadSchematic)
        self.menu_File.addAction(self.action_loadSymbol)
        self.menu_File.addAction(self.action_modifySymbol)
        self.menu_File.addSeparator()
        self.menu_File.addAction(self.action_exportFile)
        self.menu_File.addSeparator()
        self.menu_File.addAction(self.action_quit)
        self.menu_setPenWidth.addAction(self.action_setWidth2)
        self.menu_setPenWidth.addAction(self.action_setWidth4)
        self.menu_setPenWidth.addAction(self.action_setWidth6)
        self.menu_setPenWidth.addAction(self.action_setWidth8)
        self.menu_setPenWidth.addAction(self.action_setWidth10)
        self.menu_setPenColour.addAction(self.action_setPenColourBlack)
        self.menu_setPenColour.addAction(self.action_setPenColourRed)
        self.menu_setPenColour.addAction(self.action_setPenColourBlue)
        self.menu_setPenColour.addAction(self.action_setPenColourGreen)
        self.menu_setPenColour.addAction(self.action_setPenColourCyan)
        self.menu_setPenColour.addAction(self.action_setPenColourMagenta)
        self.menu_setPenColour.addAction(self.action_setPenColourYellow)
        self.menu_setPenColour.addSeparator()
        self.menu_setPenColour.addAction(self.action_setPenColourCustom)
        self.menu_setPenStyle.addAction(self.action_setPenStyleSolid)
        self.menu_setPenStyle.addAction(self.action_setPenStyleDash)
        self.menu_setPenStyle.addAction(self.action_setPenStyleDot)
        self.menu_setPenStyle.addAction(self.action_setPenStyleDashDot)
        self.menu_setPenStyle.addAction(self.action_setPenStyleDashDotDot)
        self.menu_setFillColour.addAction(self.action_setBrushColourBlack)
        self.menu_setFillColour.addAction(self.action_setBrushColourRed)
        self.menu_setFillColour.addAction(self.action_setBrushColourBlue)
        self.menu_setFillColour.addAction(self.action_setBrushColourGreen)
        self.menu_setFillColour.addAction(self.action_setBrushColourCyan)
        self.menu_setFillColour.addAction(self.action_setBrushColourMagenta)
        self.menu_setFillColour.addAction(self.action_setBrushColourYellow)
        self.menu_setFillColour.addSeparator()
        self.menu_setFillColour.addAction(self.action_setBrushColourCustom)
        self.menu_setFillStyle.addAction(self.action_setBrushStyleNone)
        self.menu_setFillStyle.addAction(self.action_setBrushStyleSolid)
        self.menuHeight.addAction(self.action_heightBringForward)
        self.menuHeight.addAction(self.action_heightSendBack)
        self.menuHeight.addSeparator()
        self.menuHeight.addAction(self.action_heightReset)
        self.menu_Edit.addAction(self.action_undo)
        self.menu_Edit.addAction(self.action_redo)
        self.menu_Edit.addSeparator()
        self.menu_Edit.addAction(self.action_delete)
        self.menu_Edit.addAction(self.action_move)
        self.menu_Edit.addAction(self.action_copy)
        self.menu_Edit.addAction(self.action_rotate)
        self.menu_Edit.addAction(self.action_mirror)
        self.menu_Edit.addSeparator()
        self.menu_Edit.addAction(self.action_pickFont)
        self.menu_Edit.addSeparator()
        self.menu_Edit.addAction(self.menuHeight.menuAction())
        self.menu_Edit.addSeparator()
        self.menu_Edit.addAction(self.menu_setPenWidth.menuAction())
        self.menu_Edit.addAction(self.menu_setPenColour.menuAction())
        self.menu_Edit.addAction(self.menu_setPenStyle.menuAction())
        self.menu_Edit.addAction(self.menu_setFillColour.menuAction())
        self.menu_Edit.addAction(self.menu_setFillStyle.menuAction())
        self.menu_Edit.addSeparator()
        self.menu_Edit.addAction(self.action_options)
        self.menu_N_type_MOSFET.addAction(self.action_addNMOSWithArrow)
        self.menu_N_type_MOSFET.addAction(self.action_addNMOSWithoutArrow)
        self.menu_P_type_MOSFET.addAction(self.action_addPMOSWithArrow)
        self.menu_P_type_MOSFET.addAction(self.action_addPMOSWithoutArrow)
        self.menu_Transistor.addAction(self.menu_N_type_MOSFET.menuAction())
        self.menu_Transistor.addAction(self.menu_P_type_MOSFET.menuAction())
        self.menu_Transistor.addAction(self.action_addNPNBJT)
        self.menu_Transistor.addAction(self.action_addPNPBJT)
        self.menu_DC.addAction(self.action_addDCVoltageSource)
        self.menu_DC.addAction(self.action_addDCCurrentSource)
        self.menu_Controlled.addAction(self.action_addVCVS)
        self.menu_Controlled.addAction(self.action_addVCCS)
        self.menu_Controlled.addAction(self.action_addCCVS)
        self.menu_Controlled.addAction(self.action_addCCCS)
        self.menuSources.addAction(self.menu_DC.menuAction())
        self.menuSources.addAction(self.action_addACSource)
        self.menuSources.addAction(self.menu_Controlled.menuAction())
        self.menu_AddSymbol.addAction(self.action_addWire)
        self.menu_AddSymbol.addAction(self.action_addResistor)
        self.menu_AddSymbol.addAction(self.action_addCapacitor)
        self.menu_AddSymbol.addAction(self.action_addGround)
        self.menu_AddSymbol.addAction(self.action_addDot)
        self.menu_AddSymbol.addAction(self.menu_Transistor.menuAction())
        self.menu_AddSymbol.addAction(self.menuSources.menuAction())
        self.menuMajor_grid_point_spacing.addAction(self.action_majorGridPointSpacing100)
        self.menuMajor_grid_point_spacing.addAction(self.action_majorGridPointSpacing200)
        self.menuMajor_grid_point_spacing.addAction(self.action_majorGridPointSpacing300)
        self.menuMajor_grid_point_spacing.addAction(self.action_majorGridPointSpacing400)
        self.menuMinor_grid_point_spacing.addAction(self.action_minorGridPointSpacing1)
        self.menuMinor_grid_point_spacing.addAction(self.action_minorGridPointSpacing2)
        self.menuMinor_grid_point_spacing.addAction(self.action_minorGridPointSpacing5)
        self.menuMinor_grid_point_spacing.addAction(self.action_minorGridPointSpacing10)
        self.menuMinor_grid_point_spacing.addAction(self.action_minorGridPointSpacing20)
        self.menuMinor_grid_point_spacing.addAction(self.action_minorGridPointSpacing30)
        self.menuMinor_grid_point_spacing.addAction(self.action_minorGridPointSpacing40)
        self.menuSnap_to_grid_spacing.addAction(self.action_snapToGridSpacing1)
        self.menuSnap_to_grid_spacing.addAction(self.action_snapToGridSpacing2)
        self.menuSnap_to_grid_spacing.addAction(self.action_snapToGridSpacing5)
        self.menuSnap_to_grid_spacing.addAction(self.action_snapToGridSpacing10)
        self.menuSnap_to_grid_spacing.addAction(self.action_snapToGridSpacing20)
        self.menuSnap_to_grid_spacing.addAction(self.action_snapToGridSpacing30)
        self.menuSnap_to_grid_spacing.addAction(self.action_snapToGridSpacing40)
        self.menu_View.addAction(self.action_fitToView)
        self.menu_View.addAction(self.action_showGrid)
        self.menu_View.addAction(self.action_snapToGrid)
        self.menu_View.addAction(self.menuSnap_to_grid_spacing.menuAction())
        self.menu_View.addSeparator()
        self.menu_View.addAction(self.action_showMajorGridPoints)
        self.menu_View.addAction(self.menuMajor_grid_point_spacing.menuAction())
        self.menu_View.addSeparator()
        self.menu_View.addAction(self.action_showMinorGridPoints)
        self.menu_View.addAction(self.menuMinor_grid_point_spacing.menuAction())
        self.menu_Arc.addAction(self.action_addArc3Point)
        self.menu_Arc.addAction(self.action_addArc4Point)
        self.menuSh_ape.addAction(self.action_addLine)
        self.menuSh_ape.addAction(self.menu_Arc.menuAction())
        self.menuSh_ape.addAction(self.action_addRectangle)
        self.menuSh_ape.addAction(self.action_addCircle)
        self.menuSh_ape.addAction(self.action_addEllipse)
        self.menuSh_ape.addAction(self.action_addTextBox)
        self.menuSh_ape.addAction(self.action_editShape)
        self.menubar.addAction(self.menu_File.menuAction())
        self.menubar.addAction(self.menu_Edit.menuAction())
        self.menubar.addAction(self.menu_View.menuAction())
        self.menubar.addAction(self.menuSh_ape.menuAction())
        self.menubar.addAction(self.menu_AddSymbol.menuAction())
        self.toolBar.addAction(self.action_undo)
        self.toolBar.addAction(self.action_redo)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.action_move)
        self.toolBar.addAction(self.action_delete)
        self.toolBar.addAction(self.action_copy)
        self.toolBar.addAction(self.action_rotate)
        self.toolBar.addAction(self.action_mirror)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "YCircuit"))
        self.menu_File.setTitle(_translate("MainWindow", "&File"))
        self.menu_Edit.setTitle(_translate("MainWindow", "&Edit"))
        self.menu_setPenWidth.setTitle(_translate("MainWindow", "&Width"))
        self.menu_setPenColour.setTitle(_translate("MainWindow", "&Colour"))
        self.menu_setPenStyle.setTitle(_translate("MainWindow", "&Pen style"))
        self.menu_setFillColour.setTitle(_translate("MainWindow", "Fill colour"))
        self.menu_setFillStyle.setTitle(_translate("MainWindow", "Fill style"))
        self.menuHeight.setTitle(_translate("MainWindow", "Height"))
        self.menu_AddSymbol.setTitle(_translate("MainWindow", "&Symbol"))
        self.menu_Transistor.setTitle(_translate("MainWindow", "&Transistor"))
        self.menu_N_type_MOSFET.setTitle(_translate("MainWindow", "&N-type MOSFET"))
        self.menu_P_type_MOSFET.setTitle(_translate("MainWindow", "&P-type MOSFET"))
        self.menuSources.setTitle(_translate("MainWindow", "&Sources"))
        self.menu_DC.setTitle(_translate("MainWindow", "&DC"))
        self.menu_Controlled.setTitle(_translate("MainWindow", "&Controlled"))
        self.menu_View.setTitle(_translate("MainWindow", "&View"))
        self.menuMajor_grid_point_spacing.setTitle(_translate("MainWindow", "Major grid point spacing"))
        self.menuMinor_grid_point_spacing.setTitle(_translate("MainWindow", "Minor grid point spacing"))
        self.menuSnap_to_grid_spacing.setTitle(_translate("MainWindow", "Snap to grid spacing"))
        self.menuSh_ape.setTitle(_translate("MainWindow", "Sh&ape"))
        self.menu_Arc.setTitle(_translate("MainWindow", "&Arc"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.action_exportFile.setText(_translate("MainWindow", "Export file"))
        self.action_exportFile.setToolTip(_translate("MainWindow", "Exports file as an image"))
        self.action_exportFile.setShortcut(_translate("MainWindow", "Ctrl+E"))
        self.action_quit.setText(_translate("MainWindow", "Quit"))
        self.action_quit.setToolTip(_translate("MainWindow", "Quits the program"))
        self.action_quit.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.action_move.setText(_translate("MainWindow", "Move"))
        self.action_move.setToolTip(_translate("MainWindow", "Move selected items"))
        self.action_move.setShortcut(_translate("MainWindow", "M"))
        self.action_copy.setText(_translate("MainWindow", "Copy"))
        self.action_copy.setToolTip(_translate("MainWindow", "Copy selected items"))
        self.action_copy.setShortcut(_translate("MainWindow", "C"))
        self.action_addWire.setText(_translate("MainWindow", "Wire"))
        self.action_addWire.setToolTip(_translate("MainWindow", "Draws a wire"))
        self.action_addWire.setShortcut(_translate("MainWindow", "W"))
        self.action_addResistor.setText(_translate("MainWindow", "&Resistor"))
        self.action_addResistor.setToolTip(_translate("MainWindow", "Draws a resistor"))
        self.action_addDot.setText(_translate("MainWindow", "Connection &dot"))
        self.action_addDot.setToolTip(_translate("MainWindow", "Draws a dot signifying connectivity"))
        self.action_setWidth2.setText(_translate("MainWindow", "2"))
        self.action_setWidth2.setToolTip(_translate("MainWindow", "Sets the width of currently selected items to 2"))
        self.action_setWidth4.setText(_translate("MainWindow", "4"))
        self.action_setWidth4.setToolTip(_translate("MainWindow", "Sets the width of currently selected items to 4"))
        self.action_setWidth6.setText(_translate("MainWindow", "6"))
        self.action_setWidth6.setToolTip(_translate("MainWindow", "Sets the width of currently selected items to 6"))
        self.action_setWidth8.setText(_translate("MainWindow", "8"))
        self.action_setWidth8.setToolTip(_translate("MainWindow", "Sets the width of currently selected items to 8"))
        self.action_setWidth10.setText(_translate("MainWindow", "10"))
        self.action_setWidth10.setToolTip(_translate("MainWindow", "Sets the width of currently selected items to 10"))
        self.action_rotate.setText(_translate("MainWindow", "Rotate"))
        self.action_rotate.setToolTip(_translate("MainWindow", "Rotate selected items"))
        self.action_rotate.setShortcut(_translate("MainWindow", "R"))
        self.action_mirror.setText(_translate("MainWindow", "Mirror"))
        self.action_mirror.setToolTip(_translate("MainWindow", "Mirror selected items"))
        self.action_mirror.setShortcut(_translate("MainWindow", "Shift+R"))
        self.action_fitToView.setText(_translate("MainWindow", "Fit to view"))
        self.action_fitToView.setShortcut(_translate("MainWindow", "F"))
        self.action_showGrid.setText(_translate("MainWindow", "Show grid"))
        self.action_showGrid.setToolTip(_translate("MainWindow", "Toggle grid visibility"))
        self.action_showGrid.setShortcut(_translate("MainWindow", "G"))
        self.action_delete.setText(_translate("MainWindow", "Delete"))
        self.action_delete.setToolTip(_translate("MainWindow", "Delete selected items"))
        self.action_delete.setShortcut(_translate("MainWindow", "D"))
        self.action_setPenColourRed.setText(_translate("MainWindow", "&Red"))
        self.action_setPenColourRed.setToolTip(_translate("MainWindow", "Set the colour of selected items to red"))
        self.action_setPenColourBlue.setText(_translate("MainWindow", "&Blue"))
        self.action_setPenColourBlue.setToolTip(_translate("MainWindow", "Set the colour of selected items to blue"))
        self.action_setPenColourGreen.setText(_translate("MainWindow", "&Green"))
        self.action_setPenColourGreen.setToolTip(_translate("MainWindow", "Set the colour of selected items to green"))
        self.action_setPenColourBlack.setText(_translate("MainWindow", "Blac&k"))
        self.action_setPenColourBlack.setToolTip(_translate("MainWindow", "Set the colour of selected items to black"))
        self.action_setPenStyleSolid.setText(_translate("MainWindow", "&Solid"))
        self.action_setPenStyleSolid.setToolTip(_translate("MainWindow", "Set pen style for selected items to solid"))
        self.action_setPenStyleDash.setText(_translate("MainWindow", "&Dash"))
        self.action_setPenStyleDash.setToolTip(_translate("MainWindow", "Set pen style for selected items to dash"))
        self.action_setPenStyleDot.setText(_translate("MainWindow", "Do&t"))
        self.action_setPenStyleDot.setToolTip(_translate("MainWindow", "Set pen style for selected items to dot"))
        self.action_setPenStyleDashDot.setText(_translate("MainWindow", "D&ash-Dot"))
        self.action_setPenStyleDashDot.setToolTip(_translate("MainWindow", "Set pen style for selected items to dash-dot"))
        self.action_setPenStyleDashDotDot.setText(_translate("MainWindow", "Dash-dot-dot"))
        self.action_setPenStyleDashDotDot.setToolTip(_translate("MainWindow", "Set pen style for selected items to dash-dot-dot"))
        self.action_addCapacitor.setText(_translate("MainWindow", "&Capacitor"))
        self.action_addCapacitor.setToolTip(_translate("MainWindow", "Draws a capacitor"))
        self.action_addGround.setText(_translate("MainWindow", "&Ground"))
        self.action_addGround.setToolTip(_translate("MainWindow", "Draws a ground symbol"))
        self.action_setBrushColourBlack.setText(_translate("MainWindow", "Blac&k"))
        self.action_setBrushColourBlack.setToolTip(_translate("MainWindow", "Sets the fill colour to black"))
        self.action_setBrushColourRed.setText(_translate("MainWindow", "&Red"))
        self.action_setBrushColourRed.setToolTip(_translate("MainWindow", "Set the fill colour to red"))
        self.action_setBrushColourBlue.setText(_translate("MainWindow", "&Blue"))
        self.action_setBrushColourBlue.setToolTip(_translate("MainWindow", "Set the fill colour to blue"))
        self.action_setBrushColourGreen.setText(_translate("MainWindow", "&Green"))
        self.action_setBrushColourGreen.setToolTip(_translate("MainWindow", "Set the brush colour to green"))
        self.action_setBrushStyleNone.setText(_translate("MainWindow", "&No fill"))
        self.action_setBrushStyleNone.setToolTip(_translate("MainWindow", "Remove any fill"))
        self.action_setBrushStyleSolid.setText(_translate("MainWindow", "&Solid"))
        self.action_setBrushStyleSolid.setToolTip(_translate("MainWindow", "Fill with a solid colour"))
        self.action_addNPNBJT.setText(_translate("MainWindow", "NPN BJT"))
        self.action_addNPNBJT.setToolTip(_translate("MainWindow", "Add NPN BJT"))
        self.action_addPNPBJT.setText(_translate("MainWindow", "PNP BJT"))
        self.action_addPNPBJT.setToolTip(_translate("MainWindow", "Add PNP BJT"))
        self.action_addNMOSWithArrow.setText(_translate("MainWindow", "With &arrow"))
        self.action_addNMOSWithArrow.setToolTip(_translate("MainWindow", "Add N-type MOSFET with arrow"))
        self.action_addNMOSWithoutArrow.setText(_translate("MainWindow", "Without arrow"))
        self.action_addNMOSWithoutArrow.setToolTip(_translate("MainWindow", "Add N-type MOSFET without arrow"))
        self.action_addPMOSWithArrow.setText(_translate("MainWindow", "With &arrow"))
        self.action_addPMOSWithArrow.setToolTip(_translate("MainWindow", "Add P-type MOSFET with arrow"))
        self.action_addPMOSWithoutArrow.setText(_translate("MainWindow", "Without arrow"))
        self.action_addPMOSWithoutArrow.setToolTip(_translate("MainWindow", "Add P-type MOSFET without arrow"))
        self.action_saveSymbol.setText(_translate("MainWindow", "Save symbol"))
        self.action_saveSymbol.setShortcut(_translate("MainWindow", "Ctrl+Shift+S"))
        self.action_loadSymbol.setText(_translate("MainWindow", "Load symbol"))
        self.action_loadSymbol.setShortcut(_translate("MainWindow", "Ctrl+Shift+L"))
        self.action_saveSchematic.setText(_translate("MainWindow", "Save schematic"))
        self.action_saveSchematic.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.action_loadSchematic.setText(_translate("MainWindow", "Load schematic"))
        self.action_loadSchematic.setShortcut(_translate("MainWindow", "Ctrl+L"))
        self.action_addLine.setText(_translate("MainWindow", "&Line"))
        self.action_addRectangle.setText(_translate("MainWindow", "&Rectangle"))
        self.action_addCircle.setText(_translate("MainWindow", "&Circle"))
        self.action_addEllipse.setText(_translate("MainWindow", "&Ellipse"))
        self.action_snapToGrid.setText(_translate("MainWindow", "Sn&ap to grid"))
        self.action_addTextBox.setText(_translate("MainWindow", "&Text box"))
        self.action_setPenColourCyan.setText(_translate("MainWindow", "&Cyan"))
        self.action_setPenColourMagenta.setText(_translate("MainWindow", "&Magenta"))
        self.action_setPenColourYellow.setText(_translate("MainWindow", "&Yellow"))
        self.action_setBrushColourCyan.setText(_translate("MainWindow", "&Cyan"))
        self.action_setBrushColourMagenta.setText(_translate("MainWindow", "&Magenta"))
        self.action_setBrushColourYellow.setText(_translate("MainWindow", "&Yellow"))
        self.action_addDCVoltageSource.setText(_translate("MainWindow", "&Voltage"))
        self.action_addDCVoltageSource.setToolTip(_translate("MainWindow", "Adds a DC voltage source"))
        self.action_addDCCurrentSource.setText(_translate("MainWindow", "&Current"))
        self.action_addDCCurrentSource.setToolTip(_translate("MainWindow", "Adds a DC current source"))
        self.action_addVCVS.setText(_translate("MainWindow", "VCVS"))
        self.action_addVCVS.setToolTip(_translate("MainWindow", "Adds a VCVS"))
        self.action_addVCCS.setText(_translate("MainWindow", "VCCS"))
        self.action_addVCCS.setToolTip(_translate("MainWindow", "Adds a VCCS"))
        self.action_addCCVS.setText(_translate("MainWindow", "CCVS"))
        self.action_addCCVS.setToolTip(_translate("MainWindow", "Adds a CCVS"))
        self.action_addCCCS.setText(_translate("MainWindow", "CCCS"))
        self.action_addCCCS.setToolTip(_translate("MainWindow", "Adds a CCCS"))
        self.action_addACSource.setText(_translate("MainWindow", "&AC"))
        self.action_addArc3Point.setText(_translate("MainWindow", "&3-point"))
        self.action_addArc4Point.setText(_translate("MainWindow", "&4-point"))
        self.action_undo.setText(_translate("MainWindow", "Undo"))
        self.action_undo.setToolTip(_translate("MainWindow", "Undo the previous action"))
        self.action_undo.setShortcut(_translate("MainWindow", "Ctrl+Z"))
        self.action_redo.setText(_translate("MainWindow", "Redo"))
        self.action_redo.setToolTip(_translate("MainWindow", "Redo the previously undid action"))
        self.action_redo.setShortcut(_translate("MainWindow", "Ctrl+Y"))
        self.action_saveSchematicAs.setText(_translate("MainWindow", "Save s&chematic as"))
        self.action_saveSymbolAs.setText(_translate("MainWindow", "Save &symbol as"))
        self.action_modifySymbol.setText(_translate("MainWindow", "&Modify symbol"))
        self.action_editShape.setText(_translate("MainWindow", "Edit shape"))
        self.action_editShape.setToolTip(_translate("MainWindow", "Edit selected shape"))
        self.action_editShape.setShortcut(_translate("MainWindow", "E"))
        self.action_newSchematic.setText(_translate("MainWindow", "New Schematic"))
        self.action_newSchematic.setToolTip(_translate("MainWindow", "Create a new schematic"))
        self.action_newSchematic.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.action_options.setText(_translate("MainWindow", "Options"))
        self.action_options.setShortcut(_translate("MainWindow", "Ctrl+P"))
        self.action_showMajorGridPoints.setText(_translate("MainWindow", "Show major grid points"))
        self.action_showMinorGridPoints.setText(_translate("MainWindow", "Show minor grid points"))
        self.action_majorGridPointSpacing100.setText(_translate("MainWindow", "&100"))
        self.action_majorGridPointSpacing200.setText(_translate("MainWindow", "&200"))
        self.action_majorGridPointSpacing300.setText(_translate("MainWindow", "&300"))
        self.action_majorGridPointSpacing400.setText(_translate("MainWindow", "&400"))
        self.action_minorGridPointSpacing1.setText(_translate("MainWindow", "1"))
        self.action_minorGridPointSpacing2.setText(_translate("MainWindow", "2"))
        self.action_minorGridPointSpacing5.setText(_translate("MainWindow", "5"))
        self.action_minorGridPointSpacing10.setText(_translate("MainWindow", "10"))
        self.action_minorGridPointSpacing20.setText(_translate("MainWindow", "20"))
        self.action_minorGridPointSpacing30.setText(_translate("MainWindow", "30"))
        self.action_minorGridPointSpacing40.setText(_translate("MainWindow", "40"))
        self.action_snapToGridSpacing1.setText(_translate("MainWindow", "1"))
        self.action_snapToGridSpacing2.setText(_translate("MainWindow", "2"))
        self.action_snapToGridSpacing5.setText(_translate("MainWindow", "5"))
        self.action_snapToGridSpacing10.setText(_translate("MainWindow", "10"))
        self.action_snapToGridSpacing20.setText(_translate("MainWindow", "20"))
        self.action_snapToGridSpacing30.setText(_translate("MainWindow", "30"))
        self.action_snapToGridSpacing40.setText(_translate("MainWindow", "40"))
        self.action_setPenColourCustom.setText(_translate("MainWindow", "Cu&stom"))
        self.action_setBrushColourCustom.setText(_translate("MainWindow", "Cu&stom"))
        self.action_pickFont.setText(_translate("MainWindow", "&Font"))
        self.action_heightBringForward.setText(_translate("MainWindow", "Bring forward"))
        self.action_heightBringForward.setShortcut(_translate("MainWindow", "Ctrl+="))
        self.action_heightSendBack.setText(_translate("MainWindow", "Send back"))
        self.action_heightSendBack.setShortcut(_translate("MainWindow", "Ctrl+-"))
        self.action_heightReset.setText(_translate("MainWindow", "Reset"))
        self.action_heightReset.setShortcut(_translate("MainWindow", "Ctrl+0"))

from src.drawingarea import DrawingArea
import icon_rc
